@model RedTeam.Models.CarSimulator


@{
    ViewBag.Title = "Car Simulator";

    <script src="../Scripts/RGraph.common.core.js"></script>
    <script src="../Scripts/RGraph.fuel.js"></script>
}

<h2>Car Simulator</h2>

<div class="">
    <div>
        <h2 class="h5">Door Lock</h2>
        <img src="~/Images/key_car_lock_pic.png" height="57" width="57"><input type="checkbox" checked="@Model.doorLock" id="doorlock"  />
    </div>
    <div>
        <h2 class="h5">Head Lights</h2>
        <img src="~/Images/headlightIcon.jpg" height="55" width="55"><input type="checkbox" checked="@Model.carLight" id="carlight" />
    </div>
    <div>
        <h2 class="h5">Start Engine</h2>
        <img src="~/Images/engineStartIcon.jpg" height="88" width="88"><input type="checkbox" checked="@Model.carEngine" id="carengine" /><audio id="EngineSound" src="~/Sounds/vehicle089.wav" preload="none" autoplay="@Model.carEngine"></audio>
    </div>
</div>

<div class="container">
    <h2 class="h5">Current Speed</h2>
    <input type="text" id="currentSpeed" />
    <input type="button" id="updateSpeed" value="Update" />

    <ul id="logmessage"></ul>
</div>
<div class="container">
    <h2 class="h5">Current Gas Level</h2>
    <div>
        <canvas id="cvs" width="200" height="200"></canvas>
    </div>
    <input type="text" id="currentGasLevel" />
    <input type="button" id="updateGas" value="Update" />

    <ul id="gaslogmessage"></ul>
</div>
@section scripts {
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            var currentSpeed = 0
            var amountOfGas = 14;
            var  timer = setInterval(function () {                       
                amountOfGas = amountOfGas - 1;
                if (amountOfGas === 0) {
                    clearInterval(timer);
                }
                carSimulator.server.sendGas(amountOfGas);
            }, 1000);

            var carSimulator = $.connection.carSimulatorHub;
            


            // Reference the auto-generated proxy for the hub.
            carSimulator.client.doorLock = function (locked) {  // Create a function that the hub can call back to display messages.
                $("#doorlock").prop('checked', locked);
            };
            carSimulator.client.carLights = function (off) {
                $("#carlight").prop('checked', off);
            };

            carSimulator.client.carEngine = function (off) {
                $("#carengine").prop('checked', off);
                if ($("#carengine").prop('checked', true)) {
                    $("#EngineSound").prop('autoplay', true)
                }
            };

            $.connection.hub.start().done(function () {

                setInterval(function () {
                    currentSpeed = currentSpeed + 1;
                    carSimulator.server.sendSpeed(currentSpeed);
                }, 1000);
                

                //$('#updateSpeed').click(function () {
                //    carSimulator.server.sendSpeed($('#currentSpeed').val()); // Call the Send method on the hub.
                //    // Clear text box and reset focus for next comment.
                //    // Html encode display name and message.
                //    var encodedspeed = $('<div />').text($('#currentSpeed').val()).html();

                //    $('#logmessage').append('<li><strong>' + 'Car current speed is: ' + encodedspeed + ' Mph' + '</li>'); // Add the message to the page.
                //    //$('#logmessage').append('<li><strong>' + 'Car current speed' + encodedspeed + '</li>');

                    //setInterval(function () {
                    //    // Call the Send method on the hub.                       
                    //    amountOfGas = amountOfGas - 1;
                    //    carSimulator.server.sendGas(amountOfGas);
                    //}, 1000);
                   
                    //timer = setInterval(function () {
                    //    amountOfGas -= 1;
                    //    if (amountOfGas === 0) {
                    //        clearInterval(timer);
                    //    }
                    //    //do whatever here..
                    //}, 1000);
                    

                    //$('#updateGas').click(function () {
                    //    // Call the Send method on the hub.
                    //    carSimulator.server.sendGas($('#currentGasLevel').val());
                    //    fuel.value = ($('#currentGasLevel').val());
                    //    RGraph.clear(document.getElementById("cvs"));

                    //    fuel.draw();

                    //    // Html encode display name and message.
                    //    var encodedgas = $('<div />').text($('#currentGasLevel').val()).html();

                    //    // Add the message to the page.
                    //    $('#gaslogmessage').append('<li><strong>' + 'Car current gas level is: ' + encodedgas + ' gallons' + '</li>');
                        //$('#logmessage').append('<li><strong>' + 'Car current speed' + encodedspeed + '</li>');
                    });
                });
            

  </script>
}



