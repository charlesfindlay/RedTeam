@model RedTeam.Models.CarSimulator
@{
    ViewBag.Title = "Dashboard";
    @*<link href="bootstrap.css" rel="stylesheet">
        <link href="bootstrap-switch.css" rel="stylesheet">
        <script src="jquery.js"></script>
        <script src="bootstrap-switch.js"></script>*@
    <script src="../Scripts/RGraph.common.core.js"></script>
    <script src="../Scripts/RGraph.fuel.js"></script>
    <script src="../Scripts/RGraph.common.dynamic.js"></script>
    <script src="../Scripts/RGraph.meter.js"></script>
    <script src="~/Scripts/RGraph.thermometer.js"></script>

    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>
    <script>

        (function ($) {
            "use strict";
            $(document).ready(function () {

                $('#doorLock').click(function () {
                    alert(this.checked ? "Doors Locked" : "Unlocked ");
                });

                $('#carLight').click(function () {
                    alert(this.checked ? "Lights On" : "Lights Off");
                });

                $('#carEngine').click(function () {
                    alert(this.checked ? "Engine On" : "Engine Off");
                });
            });

        })(jQuery);
    </script>
    @Styles.Render("~/Content/css")

}


<div class="col-md-4">
    <div id="fuel-meter">
        <canvas id="cvs" width="200" height="200"></canvas>
    </div>
    <div id="car-switches">
        <h2 class="h5">Door Lock</h2>
        <img src="~/Images/key_car_lock_pic.png" height="57" width="57">
        <input type="checkbox" id="doorLock" /> Lock Door
        <ul id="statusmessage"></ul>

        <h2 class="h5">Head Lights</h2>
        <img src="~/Images/headlightIcon.jpg" height="55" width="55">
        <input type="checkbox" id="carLight" /> Turn off Lights
        <ul id="statusmessage"></ul>

        <h2 class="h5">Start Engine</h2>
        <img src="~/Images/engineStartIcon.jpg" height="88" width="88">
        <input type="checkbox" id="carEngine" /> Turn off Engine
        <ul id="statusmessage"></ul>
    </div>
</div>




        <div class="col-md-4">

            <img src="~/images/wireCar.png" alt="Virtual Car" align="middle" />
        </div>

        @*<div class="col-sm-6 col-lg-4">
                <h2 class="h5">Head Lights</h2>
                <div class="bootstrap-switch bootstrap-switch-wrapper bootstrap-switch-id-headLight bootstrap-switch-animate bootstrap-switch-off " style="width:210px;">
                    <div class="bootstrap-switch-container" style="width:200px;margin-left:0px;">
                        <img src="~/Images/LockCar.png" sizes="sm" />
                        <span class="bootstrap-switch-handle-on bootstrap-switch-primary" style="width:53px;">NO</span>
                        <span class="bootstrap-switch-label" style="width:53px;">&nbsp;></span>
                        <span class="bootstrap-switch-handle-off bootstrap-switch-default" style="width:53px;">OFF</span>
                        <input id="doorLock" type="checkbox" checked /> Lock Door
                    </div>
                </div>
                <ul id="statusmessage"></ul>


            </div>*@
        <div class="col-md-4">
            <div id="speed-meter">
                <canvas id="odometer" width="350" height="220"></canvas>
            </div>

            <div id="engine-temp">
                <canvas id="thermo" width="100" height="200"></canvas>
            </div>
        </div>



        @section scripts {

            <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
            <script src="~/signalr/hubs"></script>


            <script>
                $(function () {
                    var dashboardHub = $.connection.dashboardHub;

                    var fuel = new RGraph.Fuel({
                        id: 'cvs',
                        min: 0,
                        max: 20,
                        value: 5
                    }).draw();

                    var thermometer = new RGraph.Thermometer({
                        id: 'thermo',
                        min: 0,
                        max: 300,
                        value: 0
                    }).draw()


                    //Start Speed Gauge
                    var meter = new RGraph.Meter({
                        id: 'odometer',
                        min: 0,
                        max: 100,
                        value: 75,
                        options: {
                            adjustable: true,
                            angles: {
                                start: RGraph.PI - 0.55,
                                end: RGraph.TWOPI + 0.5
                            },


                            linewidth: {
                                segments: 15
                            },
                            text: {
                                size: 22,
                                color: 'black'
                            },
                            green: {
                                color: '#0a0',
                                start: 0,
                                end: 50
                            },
                            yellow: {
                                color: '#D0AC41',
                                start: 50,
                                end: 75
                            },
                            red: {
                                color: '#9E1E1E',
                                start: 75,
                                end: 100
                            },
                            segment: {
                                radius: {
                                    start: 175
                                }
                            },
                            border: false,
                            strokestyle: 'white',
                            tickmarks: {
                                small: {
                                    num: 0
                                },
                                big: {
                                    num: 0
                                }
                            },
                            needle: {
                                radius: 150,
                                color: 'gray'
                            },
                            text: {
                                valign: 'bottom'
                            },
                            centerpin: {
                                fill: 'white',
                                stroke: 'gray'
                            },

                        }
                    }).draw()


                    dashboardHub.client.sendASpeed = function (speed) {
                        // update the display of the speed:
                        $("#currentSpeed").text(speed);
                        meter.value = speed;
                        RGraph.clear(document.getElementById("odometer"));
                        meter.draw();
                        // Add the message to the page.
                        $('#logmessage').append('<li><strong>' + 'Car current speed is: ' + speed + ' Mph' + '</li>');
                    };
                    dashboardHub.client.sendAGasLevel = function (gas) {
                        // update the display of the gas:
                        $("#currentGasLevel").text(gas);
                        fuel.value = gas;
                        RGraph.clear(document.getElementById("cvs"));

                        fuel.draw();
                        // Add the message to the page.
                        $('#gaslogmessage').append('<li><strong>' + 'Car current gas level is: ' + gas + ' gallons' + '</li>');
                    };

                    dashboardHub.client.displayEngineTemp = function (temp) {
                        thermometer.value = temp;
                        RGraph.clear(document.getElementById("thermo"));
                        thermometer.draw();
                    };


                    $.connection.hub.start().done(function () {
                        $('#doorLock').click(function () {
                            var boxstatus = $('#doorLock').is(':checked');
                            // Call the Send method on the hub.
                            dashboardHub.server.doorLockCmd(boxstatus);
                        });
                    });

                    $('#carLight').click(function () {
                        var boxstatus = $('#carLight').is(':checked');
                        dashboardHub.server.carLightCmd(boxstatus);
                    });
                    $('#carEngine').click(function () {
                        var boxstatus = $('#carEngine').is(':checked');
                        dashboardHub.server.carEngineCmd(boxstatus);
                    });

                });
                
                $("[name='mylock']").bootstrapSwitch();
            </script>
            @Scripts.Render("~/bundles/bootstrap")

        }
